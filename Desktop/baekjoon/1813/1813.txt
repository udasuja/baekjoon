입력으로 항승이가 작성한 내용에 있는 정수가 주어진다.
예를 들면, "정확하게 i개의 말은 참이다" 에서 i가 입력으로 주어진다.
항승이가 칠판에 작성한 내용이 주어졌을 때, 총 몇 개의 내용이 참인지 구해보자.
첫째 줄에 항승이가 한 말의 개수 N이 주어진다.
N은 1보다 크거나 같고, 50보다 작거나 같은 자연수이다.
둘째 줄에 항승이가 칠판에 작성한 내용에 있는 정수가 주어진다.
이 정수는 50보다 작거나 같은 음이 아닌 정수이다.


정확하게 i개의 말은 참이다. =>이 명제가 참이 되기위해서는 항승이가 제시하는 명제 i개가 참이 되면된다. 만약 거짓이면 항승이가 제시하는 명제 중 참이 i개가 안되면 된다.
모순은 이 명제가 참이면서 거짓이면 된다. 
즉 정확하게 i개의 말은 참이다 and 참인 말은 i개가 안된다.

1
0
=>
정확하게 0개의 말은 참이다.---1
이 중에서 참인 내용은 -1개이다.(모순 발생)
1번째 명제가 참이라 가정하면 전체 명제 중 참인 명제는 1개가 되는데 이는 1번째 명제를 거짓으로 만든다. 그렇다면 1번째 명제를 거짓으로 가정하면 전체 명제 중 참인 명제는 0개가 되는데 이는 또 1번째 명제를 참으로 만든다. 그렇기에 참이면서 거짓인 모순이 발생한다.


4
0 1 2 3

=> 
정확하게 0개의 말은 참이다. ---1
정확하게 1개의 말은 참이다. ---2 
정확하게 2개의 말은 참이다. ---3
정확하게 3개의 말은 참이다. ---4
이 중에서 참인 내용은 1개이다.(정확하게 1개의 말은 참이다.)

1번째 명제가 참이라 가정하면 거짓이되고 거짓이라 가정하면 참이 되는 모순 명제이다.
2번째 명제가 참이라 가정하면 전체 명제 중 참인 명제는 1개가 되기에 이 명제는 참이된다.
3번째 명제가 참이라 가정하면 1번째 2번째 4번째 명제는 거짓이 된다.(2번째 명제는 전체 명제 중 참인 명제가 딱 1개일 때만 참이기 때문 하지만 3번째 명제가 참이라 가정했기에 이 전체 명제 중 참인 명제는 2개가 된다. 그렇기에 2번째 명제는 자동적으로 거짓이 된다.) 그리고 이들이 거짓이 되므로 3번째 명제 또한 거짓이 된다.
4번째 명제가 참이라 가정하면 1번째 2번째 3번째 명제는 거짓이 되기에 4번째 명제는 거짓이 된다.


6
0 3 1 3 2 3
->
정확하게 0개의 말은 참이다.---1
정확하게 3개의 말은 참이다.---2
정확하게 1개의 말은 참이다.---3
정확하게 3개의 말은 참이다.---4
정확하게 2개의 말은 참이다.---5
정확하게 3개의 말은 참이다.---6
이 중에서 참인 내용은 3개이다.

1번째 명제가 참이라 가정하면 전체 명제에서 참인 명제는 1개가 된다. 즉 1번째 명제는 거짓이 된다. 거짓이라 가정하면 참이 되므로 모순 명제
2번째 명제가 참이라 가정하자 이 2번째 명제는 4번째와 6번째 명제와 같기에 이들 또한 참이 된다. 즉 전체 명제 중 참인 명제는 3개이기에 이들 명제는 참이 된다. 그리고 이 명제가 참이면 다른 명제들은 다 거짓이 된다.

2
1 1
=>
정확하게 1개의 말은 참이다. ---1
정확하게 1개의 말은 참이다. ---2
이 중에서 참인 내용은 0개이다.

1번째 명제가 참이라 가정하면 2번째 명제는 1번째 명제와 같으므로 2번째 명제 또한 참이 되기에 전체 명제 중 참인 명제가 2개가 된다. 이는 이 두개의 명제를 거짓으로 만들기에
결론적으로 전체 명제 중 참인 명제는 0개가 된다.


알고리즘:
첫 번째 입력을 n에 저장하고
for(i=0;i<n;i++)
	int k;--칠판에 작성한 내용에 있는 정수를 저장한다.
	scanf("%d",&k)
	arr[k]+=1-- 그 정수가 나온 빈도수를 저장한다.

max=-1
for(i=0;i<52;i++)
	if(arr[i]==i)--정수 값과 명제의 빈도수가 같으면 가능한 답이다.
		max=max(i,max)--그런 가능한 답 중 가장 큰 값을 출력한다.
printf("%d",max); 만약 참인 명제가 한개도 없으면 arr[0]==0이므로 max값은 0이 될 것이다. 하지만 arr[0]!=0이라는 것은 모순이 발견된 것이기에 max의 초기값인 -1이 출력이된다.